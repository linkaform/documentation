===========
Bibliotecas
===========

El frontend consiste en el desarrollo de la interfaz gráfica de un sitio o aplicación web, usando herramientas como HTML, CSS y JavaScript. Linkaform hace uso de estas herramientas y de librerías para agilizar el desarrollo de los reportes. En esta sección se brindaran los conocimientos necesarios para la implementación de reportes en el frontend y todo lo necesario respecto a las librerías utilizadas.

1. Boostrap: 

    Es una biblioteca de estilos, cuenta con una variedad de complementos de UI agilizando el desarrollo de la estructura y el diseño. Esta hace uso principalmente de clases que definen los estilos a implementar. Si desea conocer a mayor profundidad esta librería puede acceder a su sitio oficial en el siguiente enlace `bootstrap <https://getbootstrap.com/docs/5.0/getting-started/introduction/>`.
    Para hacer uso de esta biblioteca se hace uso de un CDN, esto permite obtener todos los estilos de la biblioteca a partir de un enlace, esto se hace porque el proyecto se encuentra alojado en un docker y por cada actualización seria necesario descargar el archivo, esto no es mantenible para agilizar el proceso,  se usa el siguiente CDN.

	```<link>```
	Se muestra un ejemplo de su estructura y de su uso.
	***Ejemplo***

2. Vanilla JS:
    
    Vanila JS hace uso de JavaScript puro, está orientada en mejorar el rendimiento del cliente, a partir de ECMAScript 6, se puede hacer tareas que normalmente se hacen con librerías más pesadas con JQuery.  Si desea conocer a profundidad de esta librería, puede visitar su sitio oficial `vanilaJs <http://vanilla-js.com/>`.

    ```<link>```
	Se muestra un ejemplo de su estructura y de su uso.
	***Ejemplo***

3. JQuery:
	
    Es una librería de código abierto, esta permite controlar eventos, crear animaciones de manera menos verbosa que JavaScript puro. Si desea conocer más respecto a la librería puede visitar su sitio oficial `jQuery <https://jquery.com/>`.
	Para desarrollar reportes, se usa JQuery para agilizar el manejo de elementos en el DOM y crear animaciones de forma sencilla.
	Para acceder a la librería utilice el siguiente CDN: 

    ```<link>```
	Se muestra un ejemplo de su estructura y de su uso.
	***Ejemplo***

4. Charjs:

	ChartJs es una librería basada en JavaScript, esta cuenta con un conjunto de gráficos que permiten personalizarlos, agregar complementos y agregar ciertas funcionalidades, los gráficos más comunes son los de pie, barras y de tendencia. 
	Si desea conocer más acerca de ChartJs puede acceder a su sitio oficial `Chartjs <https://www.chartjs.org/>`.

    Además, puede encontrar algunos ejemplos en el siguiente enlace [Ejercicios de Chartjs](https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/#8-grouped-bar-chart](https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/#8-grouped-bar-chart)
	Los reportes hacen uso de los gráficos para brindar a los clientes un resumen visual de sus datos, a continuación se muestra un ejemplo para entender su estructura y uso.
	Para acceder a la librería utilice el siguiente CDN:

    ```<link>```
	Se muestra un ejemplo de su estructura y de su uso.
	***Ejemplo***

5. Tabulator:

	Es una librería basada en JavaScript, cuenta con una amplia variedad de tablas, además de un grupo de complementos que agilizan la construcción de tablas. Esta tiene ciertas funcionalidades que permiten descargar los registros en distintos formatos como: pdf, excel, csv, JSON, entre otros.
	Si desea conocer más  a detalle esta librería; consulte su página oficial `Tabulator <https://tabulator.info/>`.

Continua a [[3.2.4.3.Desarrollo de demo - frontend - HTML]]
